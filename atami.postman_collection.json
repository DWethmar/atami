{
	"info": {
		"_postman_id": "314ec60d-f2ce-475e-918b-51461cc7b2d6",
		"name": "atami",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "messages",
			"item": [
				{
					"name": "message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIxNjA2MDg0MDI3NDExNTUxMjM1IiwicmVmIjoiMCIsImV4cCI6MTYwNjA4NjIxNywiaWF0IjoxNjA2MDg1MzE3LCJzdWIiOiIxa2V2WjgyWmh3MGxHUUZ6ZE93QUMzdzgwcncifQ.Nqlx0YLFLbcmyebsfD4OV0yTY8gkQFoeR76d_Ro3AIk",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{Port}}/beta/messages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{Port}}",
							"path": [
								"beta",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()",
									"pm.collectionVariables.set(\"last_created_message_uid\", jsonData.uid);",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"{{$randomPhrase}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{Port}}/beta/messages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{Port}}",
							"path": [
								"beta",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{Port}}/beta/messages/{{last_created_message_uid}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{Port}}",
							"path": [
								"beta",
								"messages",
								"{{last_created_message_uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete message",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{Port}}/beta/messages/{{last_created_message_uid}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{Port}}",
							"path": [
								"beta",
								"messages",
								"{{last_created_message_uid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "register",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{Test user username}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{Test user email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{Test user password}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:{{Port}}/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{Port}}",
					"path": [
						"auth",
						"register"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json()",
							"pm.collectionVariables.set(\"access_token\", jsonData.access_token);",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "{{Test user email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{Test user password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:{{Port}}/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{Port}}",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json()",
							"pm.collectionVariables.set(\"access_token\", jsonData.access_token);",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:{{Port}}/auth/refresh",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "{{Port}}",
					"path": [
						"auth",
						"refresh"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "<not set>"
		},
		{
			"key": "Test user password",
			"value": "8'e8r2kDrA:#,VBW"
		},
		{
			"key": "Test user email",
			"value": "test@test.nl"
		},
		{
			"key": "Test user username",
			"value": "testuser"
		},
		{
			"key": "Port",
			"value": "8080"
		},
		{
			"key": "Authorization token",
			"value": ""
		},
		{
			"key": "last_created_message_uid",
			"value": ""
		}
	]
}