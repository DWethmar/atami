version: "3.5"

services:
  api:
    build: .
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:?err}
      POSTGRES_PORT: ${POSTGRES_PORT:?err}
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:?err}
      DB_DRIVER_NAME: ${DB_DRIVER_NAME:?err}
      ACCESS_SECRET: ${ACCESS_SECRET:?err}
      MIGRATION_FILES: ${MIGRATION_FILES:?-/app/migrations/}
    ports:
      - "8080:8081"
    # restart: unless-stopped
    depends_on: 
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      POSTGRES_DB: ${POSTGRES_DATABASE:?err}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - backend

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-postgres@localhost}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-postgres}
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    networks:
      - backend
      
networks:
  backend:

volumes:
  postgres:
  pgadmin:
